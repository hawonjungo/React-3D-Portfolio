/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.3 cat-in-banana.glb -T
Files: cat-in-banana.glb [1.44MB] > D:\Dev\Code\WS\3D_Portfolio\public\models\cat-in-banana-transformed.glb [152.46KB] (89%)
Author: SOBOL (https://sketchfab.com/sbl-cool)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/cute-cat-in-cute-banana-fb3eee24c9fc422ea256b95d5148931f
Title: Cute Cat in Cute Banana
*/

import React from 'react'
import { useGraph } from '@react-three/fiber'
import { useGLTF, useAnimations } from '@react-three/drei'
import { SkeletonUtils } from 'three-stdlib'

export function CatInBanana(props) {
  const group = React.useRef()
  const { scene, animations } = useGLTF('/models/cat-in-banana-transformed.glb')
  const clone = React.useMemo(() => SkeletonUtils.clone(scene), [scene])
  const { nodes, materials } = useGraph(clone)
  const { actions } = useAnimations(animations, group)
  //  animation effect
  React.useEffect(() => {
    if (actions && animations.length > 0) {
      const firstAnimation = Object.keys(actions)[0]
      actions[firstAnimation]?.reset().fadeIn(0.5).play()
      return () => {
        actions[firstAnimation]?.fadeOut(0.5).stop()
      }
    }
  }, [actions, animations])

  return (
    <group ref={group} {...props} dispose={null}>
      <group name="Sketchfab_Scene">
        <primitive object={nodes.GLTF_created_0_rootJoint} />
        <skinnedMesh name="Object_7" geometry={nodes.Object_7.geometry} material={materials['Material.002']} skeleton={nodes.Object_7.skeleton} position={[0.228, 3.384, 0]} />
        <skinnedMesh name="Object_8" geometry={nodes.Object_8.geometry} material={materials['Material.006']} skeleton={nodes.Object_8.skeleton} position={[0.228, 3.384, 0]} />
        <skinnedMesh name="Object_10" geometry={nodes.Object_10.geometry} material={materials['Material.003']} skeleton={nodes.Object_10.skeleton} position={[0.228, 3.384, 0]} />
        <skinnedMesh name="Object_11" geometry={nodes.Object_11.geometry} material={materials['Material.006']} skeleton={nodes.Object_11.skeleton} position={[0.228, 3.384, 0]} />
        <skinnedMesh name="Object_13" geometry={nodes.Object_13.geometry} material={materials['Material.005']} skeleton={nodes.Object_13.skeleton} position={[0.228, 3.384, 0]} />
        <skinnedMesh name="Object_14" geometry={nodes.Object_14.geometry} material={materials['Material.006']} skeleton={nodes.Object_14.skeleton} position={[0.228, 3.384, 0]} />
        <skinnedMesh name="Object_16" geometry={nodes.Object_16.geometry} material={materials['Material.004']} skeleton={nodes.Object_16.skeleton} position={[0.228, 3.384, 0]} />
        <skinnedMesh name="Object_17" geometry={nodes.Object_17.geometry} material={materials['Material.006']} skeleton={nodes.Object_17.skeleton} position={[0.228, 3.384, 0]} />
        <skinnedMesh name="Object_19" geometry={nodes.Object_19.geometry} material={materials['Material.001']} skeleton={nodes.Object_19.skeleton} position={[0.228, 3.384, 0]} />
        <skinnedMesh name="Object_20" geometry={nodes.Object_20.geometry} material={materials['Material.007']} skeleton={nodes.Object_20.skeleton} position={[0.228, 3.384, 0]} />
      </group>
    </group>
  )
}

useGLTF.preload('/models/cat-in-banana-transformed.glb')
